{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n  }\n  _getResponseData(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  async editUserInfo(data) {\n    const response = await fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n    return this._getResponseData(response);\n  }\n  async getUserInfoApi() {\n    const response = await fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    return this._getResponseData(response);\n  }\n  async getCards() {\n    const response = await fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    return this._getResponseData(response);\n  }\n  async addCards(data) {\n    const response = await fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify(data)\n    });\n    return this._getResponseData(response);\n  }\n  async removeCard(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    return this._getResponseData(response);\n  }\n  async likeCard(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    return this._getResponseData(response);\n  }\n  async dislikeCard(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    return this._getResponseData(response);\n  }\n  async updateUserAvatar(data) {\n    const response = await fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    });\n    return this._getResponseData(response);\n  }\n}\nconst api = new Api({\n  //baseUrl: \"http://localhost:3000\",\n  baseUrl: \"http://api.domainname.vpanacheva.nomoreparties.co\"\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_getResponseData","res","ok","Promise","resolve","json","reject","status","editUserInfo","data","response","fetch","method","headers","authorization","localStorage","getItem","body","JSON","stringify","name","about","getUserInfoApi","getCards","addCards","removeCard","cardId","likeCard","dislikeCard","updateUserAvatar","avatar","api"],"sources":["/Users/sema66/Desktop/react-mesto-api-full-gha-1/frontend/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json())\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  async editUserInfo(data) {\n    const response = await fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    })\n    return this._getResponseData(response)\n  }\n\n  async getUserInfoApi() {\n    const response = await fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n    })\n    return this._getResponseData(response)\n  }\n\n  async getCards() {\n    const response = await fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n    })\n    return this._getResponseData(response)\n  }\n\n  async addCards(data) {\n    const response = await fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify(data),\n    })\n    return this._getResponseData(response)\n  }\n\n  async removeCard(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n    })\n    return this._getResponseData(response)\n  }\n\n  async likeCard(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n    })\n    return this._getResponseData(response)\n  }\n\n  async dislikeCard(cardId) {\n    const response = await fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n    })\n    return this._getResponseData(response)\n  }\n\n  async updateUserAvatar(data) {\n    const response = await fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    })\n    return this._getResponseData(response)\n  }\n}\n\nconst api = new Api({\n  //baseUrl: \"http://localhost:3000\",\n baseUrl: \"http://api.domainname.vpanacheva.nomoreparties.co\",\n})\n\nexport { api }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}