{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nfunction usePopupClose(isOpen, closePopup) {\n  _s();\n  useEffect(() => {\n    if (!isOpen) return; // останавливаем действие эффекта, если попап закрыт\n\n    const handleOverlay = e => {\n      // если есть `popup_opened` в классах блока, значит, кликнули на оверлей\n      if (e.target.classList.contains(\"popup_opened\")) {\n        closePopup();\n      }\n    };\n    const handleEscape = e => {\n      if (e.key === \"Escape\") {\n        closePopup();\n      }\n    };\n    document.addEventListener(\"keydown\", handleEscape);\n    document.addEventListener(\"mousedown\", handleOverlay);\n\n    //  обязательно удаляем обработчики в `clean-up`- функции\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.removeEventListener(\"mousedown\", handleOverlay);\n    };\n    // обязательно следим за `isOpen`, чтобы срабатывало только при открытии, а не при любой перерисовке компонента\n  }, [isOpen]);\n}\n_s(usePopupClose, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport { usePopupClose };","map":{"version":3,"names":["useEffect","usePopupClose","isOpen","closePopup","_s","handleOverlay","e","target","classList","contains","handleEscape","key","document","addEventListener","removeEventListener"],"sources":["/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/hooks/usePopupClose.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nfunction usePopupClose(isOpen, closePopup) {\n  useEffect(() => {\n    if (!isOpen) return; // останавливаем действие эффекта, если попап закрыт\n\n    const handleOverlay = (e) => {\n      // если есть `popup_opened` в классах блока, значит, кликнули на оверлей\n      if (e.target.classList.contains(\"popup_opened\")) {\n        closePopup();\n      }\n    };\n\n    const handleEscape = (e) => {\n      if (e.key === \"Escape\") {\n        closePopup();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscape);\n    document.addEventListener(\"mousedown\", handleOverlay);\n\n    //  обязательно удаляем обработчики в `clean-up`- функции\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.removeEventListener(\"mousedown\", handleOverlay);\n    };\n    // обязательно следим за `isOpen`, чтобы срабатывало только при открытии, а не при любой перерисовке компонента\n  }, [isOpen]);\n}\n\nexport { usePopupClose };"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,aAAaA,CAACC,MAAM,EAAEC,UAAU,EAAE;EAAAC,EAAA;EACzCJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACE,MAAM,EAAE,OAAO,CAAC;;IAErB,MAAMG,aAAa,GAAIC,CAAC,IAAK;MAC3B;MACA,IAAIA,CAAC,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;QAC/CN,UAAU,CAAC,CAAC;MACd;IACF,CAAC;IAED,MAAMO,YAAY,GAAIJ,CAAC,IAAK;MAC1B,IAAIA,CAAC,CAACK,GAAG,KAAK,QAAQ,EAAE;QACtBR,UAAU,CAAC,CAAC;MACd;IACF,CAAC;IAEDS,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEH,YAAY,CAAC;IAClDE,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAER,aAAa,CAAC;;IAErD;IACA,OAAO,MAAM;MACXO,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,YAAY,CAAC;MACrDE,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAET,aAAa,CAAC;IAC1D,CAAC;IACD;EACF,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;AACd;AAACE,EAAA,CA3BQH,aAAa;AA6BtB,SAASA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}