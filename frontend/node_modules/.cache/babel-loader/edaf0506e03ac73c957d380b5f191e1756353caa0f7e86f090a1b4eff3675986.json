{"ast":null,"code":"var _jsxFileName = \"/Users/sema66/Desktop/react-mesto-api-full-gha-1/frontend/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route, useNavigate, Navigate } from \"react-router-dom\";\nimport \"../index.css\";\nimport { Header } from \"./Header.js\";\nimport { Main } from \"./Main.js\";\nimport { Footer } from \"./Footer.js\";\nimport { Login } from \"./Login.js\";\nimport { Register } from \"./Register.js\";\nimport { ProtectedRoute } from \"./ProtectedRoute.js\";\nimport { ImagePopup } from \"./ImagePopup.js\";\nimport { InfoTooltip } from \"./InfoTooltip.js\";\nimport { EditProfilePopup } from \"./EditProfilePopup.js\";\nimport { EditAvatarPopup } from \"./EditAvatarPopup.js\";\nimport { AddPlacePopup } from \"./AddPlacePopup.js\";\nimport { ConfirmDeletePopup } from \"./ConfirmDeletePopup.js\";\n\n//import { AppContext } from \"../contexts/AppContext.js\"\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport { api } from \"../utils/Api.js\";\nimport { auth } from \"../utils/Auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /** стейты */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({}); /** создаем переменную состояния, отвечающую за данные пользователя из апи. Стейт данных текущего пользователя*/\n  const [cards, setCards] = useState([]);\n  const [deletedCard, setDeletedCard] = useState({});\n  // const [isLoading, setIsLoading] = /** переменная для отслеживания состояния загрузки во время ожидания ответа от сервера */\n  //   useState(\n  //     false\n  //   );\n  /** стейты индикатора загрузки для каждого попап */\n  const [isLoadingEditProfilePopup, setIsLoadingEditProfilePopup] = useState(false);\n  const [isLoadingAddPlacePopup, setIsLoadingAddPlacePopup] = useState(false);\n  const [isLoadingEditAvatarPopup, setIsLoadingEditAvatarPopup] = useState(false);\n  const [isLoadingConfirmDeletePopup, setIsLoadingConfirmDeletePopup] = useState(false);\n\n  /** состояние авторизации/регистрации пользователя и его данных */\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSuccessInfoTooltipStatus, setIsSuccessInfoTooltipStatus] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const navigate = useNavigate();\n\n  /** эффекты:\n   * получение данных пользователя и карточек при загрузке стр */\n  useEffect(() => {\n    isLoggedIn && Promise.all([api.getUserInfoApi(), api.getCards()]).then(_ref => {\n      let [currentUser, initialCards] = _ref;\n      console.log(currentUser, initialCards);\n      setCurrentUser(currentUser);\n      setCards(initialCards.data.reverse());\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [isLoggedIn]);\n\n  /** проверка токена */\n  useEffect(() => {\n    handleTokenCheck();\n  }, []);\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate(\"/\");\n    }\n  }, [isLoggedIn, navigate]);\n\n  /** обработчики */\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleDeleteClick(card) {\n    setDeletedCard(card);\n    setIsConfirmDeletePopupOpen(true);\n  }\n  function openInfoTooltip() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  /** обработчик лайка на карточках */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(user => user === currentUser._id);\n    (isLiked ? api.dislikeCard(card._id) : api.likeCard(card._id, true)).then(newCard => {\n      setCards(state => state.map(c => c._id === newCard.data._id ? newCard.data : c));\n    }).catch(err => console.log(err));\n  }\n\n  /** универсальная функция, которая принимает функцию запроса */\n  function handleSubmit(request) {\n    /** изменяем текст кнопки до вызова запроса */\n    //setIsLoading(true);\n    request()\n    /** закрывать попап нужно только в `then` */.then(closeAllPopups)\n    /** в каждом запросе ловим ошибку */\n    /** console.error обычно используется для логирования ошибок, если никакой другой обработки ошибки нет */.catch(console.error);\n    /** в каждом запросе в `finally` возвращаем обратно начальный текст кнопки */\n    //.finally(() => setIsLoading(false));\n  }\n\n  /** обработчик удаления карточки */\n  function handleCardDelete(card) {\n    setIsLoadingConfirmDeletePopup(true);\n    function makeRequest() {\n      return api.removeCard(card._id).then(() => {\n        setCards(cards => cards.filter(c => c._id !== card._id));\n      }).finally(() => {\n        setIsLoadingConfirmDeletePopup(false);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n\n  /** обработчик редактирования данных пользователя */\n  function handleUpdateUser(inputValues) {\n    setIsLoadingEditProfilePopup(true);\n    function makeRequest() {\n      return api.editUserInfo(inputValues).then(setCurrentUser).finally(() => {\n        setIsLoadingEditProfilePopup(false);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n\n  /** обработчик редактирования аватара пользователя */\n  function handleUpdateAvatar(inputValues) {\n    setIsLoadingEditAvatarPopup(true);\n    function makeRequest() {\n      return api.updateUserAvatar(inputValues).then(setCurrentUser).finally(() => {\n        setIsLoadingEditAvatarPopup(false);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n\n  /** обработчик добавления новой карточки */\n  function handleAddPlaceSubmit(inputValues) {\n    setIsLoadingAddPlacePopup(true);\n    function makeRequest() {\n      return api.addCards(inputValues).then(newCard => {\n        setCards([newCard.data, ...cards]);\n      }).finally(() => {\n        setIsLoadingAddPlacePopup(false);\n      });\n    }\n    handleSubmit(makeRequest);\n  }\n\n  /** обработчик регистрации пользователя */\n  function handleRegister(email, password) {\n    console.log(email, password);\n    auth.register(email, password).then(res => {\n      setIsSuccessInfoTooltipStatus(true);\n      openInfoTooltip();\n      navigate(\"/sign-in\");\n    }).catch(err => {\n      console.log(err);\n      setIsSuccessInfoTooltipStatus(false);\n      openInfoTooltip();\n    });\n  }\n\n  /** обработчик авторизации пользователя */\n  function handleLogin(email, password) {\n    console.log(email, password);\n    auth.login(email, password).then(res => {\n      localStorage.setItem(\"jwt\", res.token);\n      setUserEmail(email.email);\n      setIsLoggedIn(true);\n      navigate(\"/\");\n    }).catch(err => {\n      setIsSuccessInfoTooltipStatus(false);\n      openInfoTooltip();\n      console.log(err);\n    });\n  }\n\n  /** перенаправляем пользователя после проверки токена */\n  function handleTokenCheck() {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(jwt);\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        setUserEmail(res.email);\n        setIsLoggedIn(true);\n        navigate(\"/\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  /** обработчик чекаута пользователя */\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setIsLoggedIn(false);\n    navigate(\"/sign-in\");\n  }\n\n  /** закрытие всех попап */\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setDeletedCard({});\n    setSelectedCard({});\n  }\n\n  /** разметка jsx */\n  return (\n    /*#__PURE__*/\n    // <AppContext.Provider value={{ isLoading, closeAllPopups }}>\n    _jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          loggedIn: isLoggedIn,\n          userEmail: userEmail,\n          onSignOut: handleSignOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: Main,\n              loggedIn: isLoggedIn,\n              onEditProfile: handleEditProfileClick,\n              onEditAvatar: handleEditAvatarClick,\n              onAddPlace: handleAddPlaceClick,\n              cards: cards,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDeleteClick: handleDeleteClick,\n              onConfirmDelete: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              navigate: navigate,\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              navigate: navigate,\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onUpdateUser: handleUpdateUser,\n          isLoading: isLoadingEditProfilePopup,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit,\n          isLoading: isLoadingAddPlacePopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmDeletePopup, {\n          isOpen: isConfirmDeletePopupOpen,\n          onClose: closeAllPopups,\n          card: deletedCard,\n          onSubmit: handleCardDelete,\n          isLoading: isLoadingConfirmDeletePopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar,\n          isLoading: isLoadingEditAvatarPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          isOpen: isInfoTooltipOpen,\n          isConfirmStatus: isSuccessInfoTooltipStatus,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }, this)\n    // </AppContext.Provider>\n  );\n}\n_s(App, \"x4EcA7VYYjaxBhOtIhCyi7oTCLM=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","useNavigate","Navigate","Header","Main","Footer","Login","Register","ProtectedRoute","ImagePopup","InfoTooltip","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmDeletePopup","CurrentUserContext","api","auth","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","deletedCard","setDeletedCard","isLoadingEditProfilePopup","setIsLoadingEditProfilePopup","isLoadingAddPlacePopup","setIsLoadingAddPlacePopup","isLoadingEditAvatarPopup","setIsLoadingEditAvatarPopup","isLoadingConfirmDeletePopup","setIsLoadingConfirmDeletePopup","isLoggedIn","setIsLoggedIn","isSuccessInfoTooltipStatus","setIsSuccessInfoTooltipStatus","userEmail","setUserEmail","navigate","Promise","all","getUserInfoApi","getCards","then","_ref","initialCards","console","log","data","reverse","catch","err","handleTokenCheck","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleCardClick","card","handleDeleteClick","openInfoTooltip","handleCardLike","isLiked","likes","some","user","_id","dislikeCard","likeCard","newCard","state","map","c","handleSubmit","request","closeAllPopups","error","handleCardDelete","makeRequest","removeCard","filter","finally","handleUpdateUser","inputValues","editUserInfo","handleUpdateAvatar","updateUserAvatar","handleAddPlaceSubmit","addCards","handleRegister","email","password","register","res","handleLogin","login","localStorage","setItem","token","jwt","getItem","checkToken","handleSignOut","removeItem","Provider","value","children","className","loggedIn","onSignOut","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditProfile","onEditAvatar","onAddPlace","onCardClick","onCardLike","onCardDeleteClick","onConfirmDelete","onLogin","onRegister","to","isOpen","onUpdateUser","isLoading","onClose","onSubmit","onUpdateAvatar","isConfirmStatus","_c","$RefreshReg$"],"sources":["/Users/sema66/Desktop/react-mesto-api-full-gha-1/frontend/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Routes, Route, useNavigate, Navigate } from \"react-router-dom\"\n\nimport \"../index.css\"\n\nimport { Header } from \"./Header.js\"\nimport { Main } from \"./Main.js\"\nimport { Footer } from \"./Footer.js\"\nimport { Login } from \"./Login.js\"\nimport { Register } from \"./Register.js\"\n\nimport { ProtectedRoute } from \"./ProtectedRoute.js\"\n\nimport { ImagePopup } from \"./ImagePopup.js\"\nimport { InfoTooltip } from \"./InfoTooltip.js\"\n\nimport { EditProfilePopup } from \"./EditProfilePopup.js\"\nimport { EditAvatarPopup } from \"./EditAvatarPopup.js\"\nimport { AddPlacePopup } from \"./AddPlacePopup.js\"\nimport { ConfirmDeletePopup } from \"./ConfirmDeletePopup.js\"\n\n//import { AppContext } from \"../contexts/AppContext.js\"\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\"\n\nimport { api } from \"../utils/Api.js\"\nimport { auth } from \"../utils/Auth.js\"\n\nfunction App() {\n  /** стейты */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] =\n    useState(false)\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false)\n\n  const [selectedCard, setSelectedCard] = useState({})\n  const [currentUser, setCurrentUser] = useState(\n    {}\n  ) /** создаем переменную состояния, отвечающую за данные пользователя из апи. Стейт данных текущего пользователя*/\n  const [cards, setCards] = useState([])\n  const [deletedCard, setDeletedCard] = useState({})\n  // const [isLoading, setIsLoading] = /** переменная для отслеживания состояния загрузки во время ожидания ответа от сервера */\n  //   useState(\n  //     false\n  //   );\n  /** стейты индикатора загрузки для каждого попап */\n  const [isLoadingEditProfilePopup, setIsLoadingEditProfilePopup] =\n    useState(false)\n  const [isLoadingAddPlacePopup, setIsLoadingAddPlacePopup] = useState(false)\n  const [isLoadingEditAvatarPopup, setIsLoadingEditAvatarPopup] =\n    useState(false)\n  const [isLoadingConfirmDeletePopup, setIsLoadingConfirmDeletePopup] =\n    useState(false)\n\n  /** состояние авторизации/регистрации пользователя и его данных */\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [isSuccessInfoTooltipStatus, setIsSuccessInfoTooltipStatus] =\n    useState(false)\n  const [userEmail, setUserEmail] = useState(\"\")\n\n  const navigate = useNavigate()\n\n  /** эффекты:\n   * получение данных пользователя и карточек при загрузке стр */\n  useEffect(() => {\n    isLoggedIn &&\n      Promise.all([api.getUserInfoApi(), api.getCards()])\n        .then(([currentUser, initialCards]) => {\n          console.log(currentUser, initialCards)\n          setCurrentUser(currentUser)\n          setCards(initialCards.data.reverse())\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n  }, [isLoggedIn])\n\n  /** проверка токена */\n  useEffect(() => {\n    handleTokenCheck()\n  }, [])\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate(\"/\")\n    }\n  }, [isLoggedIn, navigate])\n\n  /** обработчики */\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function handleDeleteClick(card) {\n    setDeletedCard(card)\n    setIsConfirmDeletePopupOpen(true)\n  }\n\n  function openInfoTooltip() {\n    setIsInfoTooltipOpen(true)\n  }\n\n  /** обработчик лайка на карточках */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((user) => user === currentUser._id)\n    ;(isLiked ? api.dislikeCard(card._id) : api.likeCard(card._id, true))\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === newCard.data._id ? newCard.data : c))\n        )\n      })\n      .catch((err) => console.log(err))\n  }\n\n  /** универсальная функция, которая принимает функцию запроса */\n  function handleSubmit(request) {\n    /** изменяем текст кнопки до вызова запроса */\n    //setIsLoading(true);\n    request()\n      /** закрывать попап нужно только в `then` */\n      .then(closeAllPopups)\n      /** в каждом запросе ловим ошибку */\n      /** console.error обычно используется для логирования ошибок, если никакой другой обработки ошибки нет */\n      .catch(console.error)\n    /** в каждом запросе в `finally` возвращаем обратно начальный текст кнопки */\n    //.finally(() => setIsLoading(false));\n  }\n\n  /** обработчик удаления карточки */\n  function handleCardDelete(card) {\n    setIsLoadingConfirmDeletePopup(true)\n    function makeRequest() {\n      return api\n        .removeCard(card._id)\n        .then(() => {\n          setCards((cards) => cards.filter((c) => c._id !== card._id))\n        })\n        .finally(() => {\n          setIsLoadingConfirmDeletePopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик редактирования данных пользователя */\n  function handleUpdateUser(inputValues) {\n    setIsLoadingEditProfilePopup(true)\n    function makeRequest() {\n      return api\n        .editUserInfo(inputValues)\n        .then(setCurrentUser)\n        .finally(() => {\n          setIsLoadingEditProfilePopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик редактирования аватара пользователя */\n  function handleUpdateAvatar(inputValues) {\n    setIsLoadingEditAvatarPopup(true)\n    function makeRequest() {\n      return api\n        .updateUserAvatar(inputValues)\n        .then(setCurrentUser)\n        .finally(() => {\n          setIsLoadingEditAvatarPopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик добавления новой карточки */\n  function handleAddPlaceSubmit(inputValues) {\n    setIsLoadingAddPlacePopup(true)\n    function makeRequest() {\n      return api\n        .addCards(inputValues)\n        .then((newCard) => {\n          setCards([newCard.data, ...cards])\n        })\n        .finally(() => {\n          setIsLoadingAddPlacePopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик регистрации пользователя */\n  function handleRegister(email, password) {\n    console.log(email, password)\n    auth\n      .register(email, password)\n      .then((res) => {\n        setIsSuccessInfoTooltipStatus(true)\n        openInfoTooltip()\n        navigate(\"/sign-in\")\n      })\n      .catch((err) => {\n        console.log(err)\n        setIsSuccessInfoTooltipStatus(false)\n        openInfoTooltip()\n      })\n  }\n\n  /** обработчик авторизации пользователя */\n  function handleLogin(email, password) {\n    console.log(email, password)\n    auth\n      .login(email, password)\n      .then((res) => {\n        localStorage.setItem(\"jwt\", res.token)\n        setUserEmail(email.email)\n        setIsLoggedIn(true)\n        navigate(\"/\")\n      })\n      .catch((err) => {\n        setIsSuccessInfoTooltipStatus(false)\n        openInfoTooltip()\n        console.log(err)\n      })\n  }\n\n  /** перенаправляем пользователя после проверки токена */\n  function handleTokenCheck() {\n    const jwt = localStorage.getItem(\"jwt\")\n    console.log(jwt)\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          setUserEmail(res.email)\n          setIsLoggedIn(true)\n          navigate(\"/\")\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  /** обработчик чекаута пользователя */\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\")\n    setIsLoggedIn(false)\n    navigate(\"/sign-in\")\n  }\n\n  /** закрытие всех попап */\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsConfirmDeletePopupOpen(false)\n    setIsInfoTooltipOpen(false)\n    setDeletedCard({})\n    setSelectedCard({})\n  }\n\n  /** разметка jsx */\n  return (\n    // <AppContext.Provider value={{ isLoading, closeAllPopups }}>\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header\n          loggedIn={isLoggedIn}\n          userEmail={userEmail}\n          onSignOut={handleSignOut}\n        />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute\n                element={Main}\n                loggedIn={isLoggedIn}\n                onEditProfile={handleEditProfileClick}\n                onEditAvatar={handleEditAvatarClick}\n                onAddPlace={handleAddPlaceClick}\n                cards={cards}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDeleteClick={handleDeleteClick}\n                onConfirmDelete={handleDeleteClick}\n              />\n            }\n          />\n\n          <Route\n            path=\"/sign-in\"\n            element={<Login navigate={navigate} onLogin={handleLogin} />}\n          />\n\n          <Route\n            path=\"/sign-up\"\n            element={\n              <Register navigate={navigate} onRegister={handleRegister} />\n            }\n          />\n\n          <Route\n            path=\"*\"\n            element={\n              isLoggedIn ? <Navigate to=\"/\" /> : <Navigate to=\"/sign-in\" />\n            }\n          />\n        </Routes>\n\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoadingEditProfilePopup}\n          onClose={closeAllPopups}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoadingAddPlacePopup}\n        />\n\n        <ConfirmDeletePopup\n          isOpen={isConfirmDeletePopupOpen}\n          onClose={closeAllPopups}\n          card={deletedCard}\n          onSubmit={handleCardDelete}\n          isLoading={isLoadingConfirmDeletePopup}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoadingEditAvatarPopup}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          isConfirmStatus={isSuccessInfoTooltipStatus}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n    // </AppContext.Provider>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}