[{"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/index.js":"1","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/App.js":"2","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/reportWebVitals.js":"3","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Header.js":"4","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Login.js":"5","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/ProtectedRoute.js":"6","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js":"7","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/EditProfilePopup.js":"8","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/ImagePopup.js":"9","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Main.js":"10","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/EditAvatarPopup.js":"11","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Footer.js":"12","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Register.js":"13","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/AddPlacePopup.js":"14","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/ConfirmDeletePopup.js":"15","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/contexts/AppContext.js":"16","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/utils/Api.js":"17","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/contexts/CurrentUserContext.js":"18","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/utils/Auth.js":"19","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/PopupWithForm.js":"20","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Card.js":"21","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/hooks/useForm.js":"22","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/hooks/usePopupClose.js":"23"},{"size":642,"mtime":1691314220000,"results":"24","hashOfConfig":"25"},{"size":11486,"mtime":1691314220000,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1691314220000,"results":"27","hashOfConfig":"25"},{"size":1571,"mtime":1691314220000,"results":"28","hashOfConfig":"25"},{"size":1722,"mtime":1691314220000,"results":"29","hashOfConfig":"25"},{"size":452,"mtime":1691314220000,"results":"30","hashOfConfig":"25"},{"size":1342,"mtime":1691314220000,"results":"31","hashOfConfig":"25"},{"size":2546,"mtime":1691314220000,"results":"32","hashOfConfig":"25"},{"size":776,"mtime":1691314220000,"results":"33","hashOfConfig":"25"},{"size":2240,"mtime":1691314220000,"results":"34","hashOfConfig":"25"},{"size":1558,"mtime":1691314220000,"results":"35","hashOfConfig":"25"},{"size":278,"mtime":1691314220000,"results":"36","hashOfConfig":"25"},{"size":1855,"mtime":1691314220000,"results":"37","hashOfConfig":"25"},{"size":1650,"mtime":1691314220000,"results":"38","hashOfConfig":"25"},{"size":499,"mtime":1691314220000,"results":"39","hashOfConfig":"25"},{"size":75,"mtime":1691314220000,"results":"40","hashOfConfig":"25"},{"size":2985,"mtime":1691686990610,"results":"41","hashOfConfig":"25"},{"size":84,"mtime":1691314220000,"results":"42","hashOfConfig":"25"},{"size":1235,"mtime":1691686990609,"results":"43","hashOfConfig":"25"},{"size":1845,"mtime":1691314220000,"results":"44","hashOfConfig":"25"},{"size":2362,"mtime":1691314220000,"results":"45","hashOfConfig":"25"},{"size":314,"mtime":1691314220000,"results":"46","hashOfConfig":"25"},{"size":1190,"mtime":1691314220000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"170vw1o",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/index.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/App.js",["120","121"],[],"import React, { useEffect, useState } from \"react\"\nimport { Routes, Route, useNavigate, Navigate } from \"react-router-dom\"\n\nimport \"../index.css\"\n\nimport { Header } from \"./Header.js\"\nimport { Main } from \"./Main.js\"\nimport { Footer } from \"./Footer.js\"\nimport { Login } from \"./Login.js\"\nimport { Register } from \"./Register.js\"\n\nimport { ProtectedRoute } from \"./ProtectedRoute.js\"\n\nimport { ImagePopup } from \"./ImagePopup.js\"\nimport { InfoTooltip } from \"./InfoTooltip.js\"\n\nimport { EditProfilePopup } from \"./EditProfilePopup.js\"\nimport { EditAvatarPopup } from \"./EditAvatarPopup.js\"\nimport { AddPlacePopup } from \"./AddPlacePopup.js\"\nimport { ConfirmDeletePopup } from \"./ConfirmDeletePopup.js\"\n\nimport { AppContext } from \"../contexts/AppContext.js\"\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\"\n\nimport { api } from \"../utils/Api.js\"\nimport { auth } from \"../utils/Auth.js\"\n\nfunction App() {\n  /** стейты */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] =\n    useState(false)\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false)\n\n  const [selectedCard, setSelectedCard] = useState({})\n  const [currentUser, setCurrentUser] = useState(\n    {}\n  ) /** создаем переменную состояния, отвечающую за данные пользователя из апи. Стейт данных текущего пользователя*/\n  const [cards, setCards] = useState([])\n  const [deletedCard, setDeletedCard] = useState({})\n  // const [isLoading, setIsLoading] = /** переменная для отслеживания состояния загрузки во время ожидания ответа от сервера */\n  //   useState(\n  //     false\n  //   );\n  /** стейты индикатора загрузки для каждого попап */\n  const [isLoadingEditProfilePopup, setIsLoadingEditProfilePopup] =\n    useState(false)\n  const [isLoadingAddPlacePopup, setIsLoadingAddPlacePopup] = useState(false)\n  const [isLoadingEditAvatarPopup, setIsLoadingEditAvatarPopup] =\n    useState(false)\n  const [isLoadingConfirmDeletePopup, setIsLoadingConfirmDeletePopup] =\n    useState(false)\n\n  /** состояние авторизации/регистрации пользователя и его данных */\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [isSuccessInfoTooltipStatus, setIsSuccessInfoTooltipStatus] =\n    useState(false)\n  const [userEmail, setUserEmail] = useState(\"\")\n\n  const navigate = useNavigate()\n\n  /** эффекты:\n   * получение данных пользователя и карточек при загрузке стр */\n  useEffect(() => {\n    isLoggedIn &&\n      Promise.all([api.getUserInfoApi(), api.getCards()])\n        .then(([currentUser, initialCards]) => {\n          console.log(currentUser, initialCards)\n          setCurrentUser(currentUser)\n          setCards(initialCards.data.reverse())\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n  }, [isLoggedIn])\n\n  /** проверка токена */\n  useEffect(() => {\n    handleTokenCheck()\n  }, [])\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate(\"/\")\n    }\n  }, [isLoggedIn, navigate])\n\n  /** обработчики */\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function handleDeleteClick(card) {\n    setDeletedCard(card)\n    setIsConfirmDeletePopupOpen(true)\n  }\n\n  function openInfoTooltip() {\n    setIsInfoTooltipOpen(true)\n  }\n\n  /** обработчик лайка на карточках */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((user) => user === currentUser._id)\n    ;(isLiked ? api.dislikeCard(card._id) : api.likeCard(card._id, true))\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === newCard.data._id ? newCard.data : c))\n        )\n      })\n      .catch((err) => console.log(err))\n  }\n\n  /** универсальная функция, которая принимает функцию запроса */\n  function handleSubmit(request) {\n    /** изменяем текст кнопки до вызова запроса */\n    //setIsLoading(true);\n    request()\n      /** закрывать попап нужно только в `then` */\n      .then(closeAllPopups)\n      /** в каждом запросе ловим ошибку */\n      /** console.error обычно используется для логирования ошибок, если никакой другой обработки ошибки нет */\n      .catch(console.error)\n    /** в каждом запросе в `finally` возвращаем обратно начальный текст кнопки */\n    //.finally(() => setIsLoading(false));\n  }\n\n  /** обработчик удаления карточки */\n  function handleCardDelete(card) {\n    setIsLoadingConfirmDeletePopup(true)\n    function makeRequest() {\n      return api\n        .removeCard(card._id)\n        .then(() => {\n          setCards((cards) => cards.filter((c) => c._id !== card._id))\n        })\n        .finally(() => {\n          setIsLoadingConfirmDeletePopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик редактирования данных пользователя */\n  function handleUpdateUser(inputValues) {\n    setIsLoadingEditProfilePopup(true)\n    function makeRequest() {\n      return api\n        .editUserInfo(inputValues)\n        .then(setCurrentUser)\n        .finally(() => {\n          setIsLoadingEditProfilePopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик редактирования аватара пользователя */\n  function handleUpdateAvatar(inputValues) {\n    setIsLoadingEditAvatarPopup(true)\n    function makeRequest() {\n      return api\n        .updateUserAvatar(inputValues)\n        .then(setCurrentUser)\n        .finally(() => {\n          setIsLoadingEditAvatarPopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик добавления новой карточки */\n  function handleAddPlaceSubmit(inputValues) {\n    setIsLoadingAddPlacePopup(true)\n    function makeRequest() {\n      return api\n        .addCards(inputValues)\n        .then((newCard) => {\n          setCards([newCard.data, ...cards])\n        })\n        .finally(() => {\n          setIsLoadingAddPlacePopup(false)\n        })\n    }\n    handleSubmit(makeRequest)\n  }\n\n  /** обработчик регистрации пользователя */\n  function handleRegister(email, password) {\n    console.log(email, password)\n    auth\n      .register(email, password)\n      .then((res) => {\n        setIsSuccessInfoTooltipStatus(true)\n        openInfoTooltip()\n        navigate(\"/sign-in\")\n      })\n      .catch((err) => {\n        console.log(err)\n        setIsSuccessInfoTooltipStatus(false)\n        openInfoTooltip()\n      })\n  }\n\n  /** обработчик авторизации пользователя */\n  function handleLogin(email, password) {\n    console.log(email, password)\n    auth\n      .login(email, password)\n      .then((res) => {\n        localStorage.setItem(\"jwt\", res.token)\n        setUserEmail(email.email)\n        setIsLoggedIn(true)\n        navigate(\"/\")\n      })\n      .catch((err) => {\n        setIsSuccessInfoTooltipStatus(false)\n        openInfoTooltip()\n        console.log(err)\n      })\n  }\n\n  /** перенаправляем пользователя после проверки токена */\n  function handleTokenCheck() {\n    const jwt = localStorage.getItem(\"jwt\")\n    console.log(jwt)\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          setUserEmail(res.email)\n          setIsLoggedIn(true)\n          navigate(\"/\")\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  /** обработчик чекаута пользователя */\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\")\n    setIsLoggedIn(false)\n    navigate(\"/sign-in\")\n  }\n\n  /** закрытие всех попап */\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsConfirmDeletePopupOpen(false)\n    setIsInfoTooltipOpen(false)\n    setDeletedCard({})\n    setSelectedCard({})\n  }\n\n  /** разметка jsx */\n  return (\n    // <AppContext.Provider value={{ isLoading, closeAllPopups }}>\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header\n          loggedIn={isLoggedIn}\n          userEmail={userEmail}\n          onSignOut={handleSignOut}\n        />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute\n                element={Main}\n                loggedIn={isLoggedIn}\n                onEditProfile={handleEditProfileClick}\n                onEditAvatar={handleEditAvatarClick}\n                onAddPlace={handleAddPlaceClick}\n                cards={cards}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDeleteClick={handleDeleteClick}\n                onConfirmDelete={handleDeleteClick}\n              />\n            }\n          />\n\n          <Route\n            path=\"/sign-in\"\n            element={<Login navigate={navigate} onLogin={handleLogin} />}\n          />\n\n          <Route\n            path=\"/sign-up\"\n            element={\n              <Register navigate={navigate} onRegister={handleRegister} />\n            }\n          />\n\n          <Route\n            path=\"*\"\n            element={\n              isLoggedIn ? <Navigate to=\"/\" /> : <Navigate to=\"/sign-in\" />\n            }\n          />\n        </Routes>\n\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onUpdateUser={handleUpdateUser}\n          isLoading={isLoadingEditProfilePopup}\n          onClose={closeAllPopups}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          isLoading={isLoadingAddPlacePopup}\n        />\n\n        <ConfirmDeletePopup\n          isOpen={isConfirmDeletePopupOpen}\n          onClose={closeAllPopups}\n          card={deletedCard}\n          onSubmit={handleCardDelete}\n          isLoading={isLoadingConfirmDeletePopup}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoadingEditAvatarPopup}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          isConfirmStatus={isSuccessInfoTooltipStatus}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n    // </AppContext.Provider>\n  )\n}\n\nexport default App\n","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/reportWebVitals.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Header.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Login.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/ProtectedRoute.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/EditProfilePopup.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/ImagePopup.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Main.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/EditAvatarPopup.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Footer.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Register.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/AddPlacePopup.js",["122"],[],"import React, { useEffect } from 'react';\nimport { PopupWithForm } from './PopupWithForm.js';\nimport { useForm } from '../hooks/useForm.js';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoading }) {\n\n  const {values, handleChange, setValues} = useForm({}); \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({\n      name: values.name,\n      link: values.link,\n    });\n  }\n\n  /** чистим инпуты */\n  useEffect(() => {\n    setValues({\n      link: '',\n      name: ''\n    })\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      name='popup-add'\n      title='Новое место'\n      text={isLoading? 'Создаем...' : 'Создать'}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <fieldset className='form__input-container'>\n        <input\n          type='text'\n          name='name'\n          id='cardname-input'\n          className='form__item form__item_image_name'\n          placeholder='Название'\n          minLength={2}\n          maxLength={30}\n          required\n          value={values.name || ''}\n          onChange={handleChange}\n        />\n        <span className='form__item-error cardname-input-error' />\n        <input\n          type='url'\n          name='link'\n          id='link-input'\n          className='form__item form__item_image_link'\n          placeholder='Ссылка на картинку'\n          required\n          value={values.link || ''}\n          onChange={handleChange}\n        />\n        <span className='form__item-error link-input-error' />\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport { AddPlacePopup };\n","/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/ConfirmDeletePopup.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/contexts/AppContext.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/utils/Api.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/contexts/CurrentUserContext.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/utils/Auth.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/PopupWithForm.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/components/Card.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/hooks/useForm.js",[],[],"/Users/sema66/Desktop/react-mesto-api-full-gha/frontend/src/hooks/usePopupClose.js",["123"],[],"import { useEffect } from \"react\";\n\nfunction usePopupClose(isOpen, closePopup) {\n  useEffect(() => {\n    if (!isOpen) return; // останавливаем действие эффекта, если попап закрыт\n\n    const handleOverlay = (e) => {\n      // если есть `popup_opened` в классах блока, значит, кликнули на оверлей\n      if (e.target.classList.contains(\"popup_opened\")) {\n        closePopup();\n      }\n    };\n\n    const handleEscape = (e) => {\n      if (e.key === \"Escape\") {\n        closePopup();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscape);\n    document.addEventListener(\"mousedown\", handleOverlay);\n\n    //  обязательно удаляем обработчики в `clean-up`- функции\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.removeEventListener(\"mousedown\", handleOverlay);\n    };\n    // обязательно следим за `isOpen`, чтобы срабатывало только при открытии, а не при любой перерисовке компонента\n  }, [isOpen]);\n}\n\nexport { usePopupClose };",{"ruleId":"124","severity":1,"message":"125","line":22,"column":10,"nodeType":"126","messageId":"127","endLine":22,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":82,"column":6,"nodeType":"130","endLine":82,"endColumn":8,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":23,"column":6,"nodeType":"130","endLine":23,"endColumn":14,"suggestions":"133"},{"ruleId":"128","severity":1,"message":"134","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":14,"suggestions":"135"},"no-unused-vars","'AppContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'closePopup'. Either include it or remove the dependency array. If 'closePopup' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["138"],{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [handleTokenCheck]",{"range":"145","text":"146"},"Update the dependencies array to be: [isOpen, setValues]",{"range":"147","text":"148"},"Update the dependencies array to be: [closePopup, isOpen]",{"range":"149","text":"150"},[3042,3044],"[handleTokenCheck]",[506,514],"[isOpen, setValues]",[943,951],"[closePopup, isOpen]"]